// Mocks generated by Mockito 5.4.4 from annotations
// in josh_weather/test/helper/mocks_helper/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i10;

import 'package:dartz/dartz.dart' as _i7;
import 'package:dio/dio.dart' as _i6;
import 'package:event_bus/event_bus.dart' as _i5;
import 'package:internet_connection_checker_plus/internet_connection_checker_plus.dart'
    as _i3;
import 'package:josh_weather/core/core.dart' as _i4;
import 'package:josh_weather/core/module/inject_module.dart' as _i9;
import 'package:josh_weather/feature/application/application.dart' as _i12;
import 'package:josh_weather/feature/domain/domain.dart' as _i8;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i11;
import 'package:shared_preferences/shared_preferences.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSharedPreferences_0 extends _i1.SmartFake
    implements _i2.SharedPreferences {
  _FakeSharedPreferences_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInternetConnection_1 extends _i1.SmartFake
    implements _i3.InternetConnection {
  _FakeInternetConnection_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUrlBuilder_2 extends _i1.SmartFake implements _i4.UrlBuilder {
  _FakeUrlBuilder_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEventBus_3 extends _i1.SmartFake implements _i5.EventBus {
  _FakeEventBus_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDio_4 extends _i1.SmartFake implements _i6.Dio {
  _FakeDio_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBaseOptions_5 extends _i1.SmartFake implements _i6.BaseOptions {
  _FakeBaseOptions_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHttpClientAdapter_6 extends _i1.SmartFake
    implements _i6.HttpClientAdapter {
  _FakeHttpClientAdapter_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTransformer_7 extends _i1.SmartFake implements _i6.Transformer {
  _FakeTransformer_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInterceptors_8 extends _i1.SmartFake implements _i6.Interceptors {
  _FakeInterceptors_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_9<T1> extends _i1.SmartFake implements _i6.Response<T1> {
  _FakeResponse_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_10<L, R> extends _i1.SmartFake implements _i7.Either<L, R> {
  _FakeEither_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDuration_11 extends _i1.SmartFake implements Duration {
  _FakeDuration_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWeatherRepository_12 extends _i1.SmartFake
    implements _i8.WeatherRepository {
  _FakeWeatherRepository_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [InjectableModule].
///
/// See the documentation for Mockito's code generation for more information.
class MockInjectableModule extends _i1.Mock implements _i9.InjectableModule {
  @override
  _i10.Future<_i2.SharedPreferences> get prefs => (super.noSuchMethod(
        Invocation.getter(#prefs),
        returnValue:
            _i10.Future<_i2.SharedPreferences>.value(_FakeSharedPreferences_0(
          this,
          Invocation.getter(#prefs),
        )),
        returnValueForMissingStub:
            _i10.Future<_i2.SharedPreferences>.value(_FakeSharedPreferences_0(
          this,
          Invocation.getter(#prefs),
        )),
      ) as _i10.Future<_i2.SharedPreferences>);

  @override
  _i3.InternetConnection get internetConnectionChecker => (super.noSuchMethod(
        Invocation.getter(#internetConnectionChecker),
        returnValue: _FakeInternetConnection_1(
          this,
          Invocation.getter(#internetConnectionChecker),
        ),
        returnValueForMissingStub: _FakeInternetConnection_1(
          this,
          Invocation.getter(#internetConnectionChecker),
        ),
      ) as _i3.InternetConnection);

  @override
  String get baseUrl => (super.noSuchMethod(
        Invocation.getter(#baseUrl),
        returnValue: _i11.dummyValue<String>(
          this,
          Invocation.getter(#baseUrl),
        ),
        returnValueForMissingStub: _i11.dummyValue<String>(
          this,
          Invocation.getter(#baseUrl),
        ),
      ) as String);

  @override
  String get apiKey => (super.noSuchMethod(
        Invocation.getter(#apiKey),
        returnValue: _i11.dummyValue<String>(
          this,
          Invocation.getter(#apiKey),
        ),
        returnValueForMissingStub: _i11.dummyValue<String>(
          this,
          Invocation.getter(#apiKey),
        ),
      ) as String);

  @override
  _i4.UrlBuilder get urlBuilder => (super.noSuchMethod(
        Invocation.getter(#urlBuilder),
        returnValue: _FakeUrlBuilder_2(
          this,
          Invocation.getter(#urlBuilder),
        ),
        returnValueForMissingStub: _FakeUrlBuilder_2(
          this,
          Invocation.getter(#urlBuilder),
        ),
      ) as _i4.UrlBuilder);

  @override
  _i5.EventBus get eventBus => (super.noSuchMethod(
        Invocation.getter(#eventBus),
        returnValue: _FakeEventBus_3(
          this,
          Invocation.getter(#eventBus),
        ),
        returnValueForMissingStub: _FakeEventBus_3(
          this,
          Invocation.getter(#eventBus),
        ),
      ) as _i5.EventBus);

  @override
  _i10.Future<_i6.Dio> get authenticatedDio => (super.noSuchMethod(
        Invocation.getter(#authenticatedDio),
        returnValue: _i10.Future<_i6.Dio>.value(_FakeDio_4(
          this,
          Invocation.getter(#authenticatedDio),
        )),
        returnValueForMissingStub: _i10.Future<_i6.Dio>.value(_FakeDio_4(
          this,
          Invocation.getter(#authenticatedDio),
        )),
      ) as _i10.Future<_i6.Dio>);
}

/// A class which mocks [Dio].
///
/// See the documentation for Mockito's code generation for more information.
class MockDio extends _i1.Mock implements _i6.Dio {
  @override
  _i6.BaseOptions get options => (super.noSuchMethod(
        Invocation.getter(#options),
        returnValue: _FakeBaseOptions_5(
          this,
          Invocation.getter(#options),
        ),
        returnValueForMissingStub: _FakeBaseOptions_5(
          this,
          Invocation.getter(#options),
        ),
      ) as _i6.BaseOptions);

  @override
  set options(_i6.BaseOptions? _options) => super.noSuchMethod(
        Invocation.setter(
          #options,
          _options,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.HttpClientAdapter get httpClientAdapter => (super.noSuchMethod(
        Invocation.getter(#httpClientAdapter),
        returnValue: _FakeHttpClientAdapter_6(
          this,
          Invocation.getter(#httpClientAdapter),
        ),
        returnValueForMissingStub: _FakeHttpClientAdapter_6(
          this,
          Invocation.getter(#httpClientAdapter),
        ),
      ) as _i6.HttpClientAdapter);

  @override
  set httpClientAdapter(_i6.HttpClientAdapter? _httpClientAdapter) =>
      super.noSuchMethod(
        Invocation.setter(
          #httpClientAdapter,
          _httpClientAdapter,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Transformer get transformer => (super.noSuchMethod(
        Invocation.getter(#transformer),
        returnValue: _FakeTransformer_7(
          this,
          Invocation.getter(#transformer),
        ),
        returnValueForMissingStub: _FakeTransformer_7(
          this,
          Invocation.getter(#transformer),
        ),
      ) as _i6.Transformer);

  @override
  set transformer(_i6.Transformer? _transformer) => super.noSuchMethod(
        Invocation.setter(
          #transformer,
          _transformer,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Interceptors get interceptors => (super.noSuchMethod(
        Invocation.getter(#interceptors),
        returnValue: _FakeInterceptors_8(
          this,
          Invocation.getter(#interceptors),
        ),
        returnValueForMissingStub: _FakeInterceptors_8(
          this,
          Invocation.getter(#interceptors),
        ),
      ) as _i6.Interceptors);

  @override
  void close({bool? force = false}) => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
          {#force: force},
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i10.Future<_i6.Response<T>> get<T>(
    String? path, {
    Map<String, dynamic>? queryParameters,
    _i6.Options? options,
    _i6.CancelToken? cancelToken,
    _i6.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [path],
          {
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i10.Future<_i6.Response<T>>.value(_FakeResponse_9<T>(
          this,
          Invocation.method(
            #get,
            [path],
            {
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i6.Response<T>>.value(_FakeResponse_9<T>(
          this,
          Invocation.method(
            #get,
            [path],
            {
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i10.Future<_i6.Response<T>>);

  @override
  _i10.Future<_i6.Response<T>> getUri<T>(
    Uri? uri, {
    _i6.Options? options,
    _i6.CancelToken? cancelToken,
    _i6.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUri,
          [uri],
          {
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i10.Future<_i6.Response<T>>.value(_FakeResponse_9<T>(
          this,
          Invocation.method(
            #getUri,
            [uri],
            {
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i6.Response<T>>.value(_FakeResponse_9<T>(
          this,
          Invocation.method(
            #getUri,
            [uri],
            {
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i10.Future<_i6.Response<T>>);

  @override
  _i10.Future<_i6.Response<T>> post<T>(
    String? path, {
    dynamic data,
    Map<String, dynamic>? queryParameters,
    _i6.Options? options,
    _i6.CancelToken? cancelToken,
    _i6.ProgressCallback? onSendProgress,
    _i6.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i10.Future<_i6.Response<T>>.value(_FakeResponse_9<T>(
          this,
          Invocation.method(
            #post,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i6.Response<T>>.value(_FakeResponse_9<T>(
          this,
          Invocation.method(
            #post,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i10.Future<_i6.Response<T>>);

  @override
  _i10.Future<_i6.Response<T>> postUri<T>(
    Uri? uri, {
    dynamic data,
    _i6.Options? options,
    _i6.CancelToken? cancelToken,
    _i6.ProgressCallback? onSendProgress,
    _i6.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #postUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i10.Future<_i6.Response<T>>.value(_FakeResponse_9<T>(
          this,
          Invocation.method(
            #postUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i6.Response<T>>.value(_FakeResponse_9<T>(
          this,
          Invocation.method(
            #postUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i10.Future<_i6.Response<T>>);

  @override
  _i10.Future<_i6.Response<T>> put<T>(
    String? path, {
    dynamic data,
    Map<String, dynamic>? queryParameters,
    _i6.Options? options,
    _i6.CancelToken? cancelToken,
    _i6.ProgressCallback? onSendProgress,
    _i6.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i10.Future<_i6.Response<T>>.value(_FakeResponse_9<T>(
          this,
          Invocation.method(
            #put,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i6.Response<T>>.value(_FakeResponse_9<T>(
          this,
          Invocation.method(
            #put,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i10.Future<_i6.Response<T>>);

  @override
  _i10.Future<_i6.Response<T>> putUri<T>(
    Uri? uri, {
    dynamic data,
    _i6.Options? options,
    _i6.CancelToken? cancelToken,
    _i6.ProgressCallback? onSendProgress,
    _i6.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i10.Future<_i6.Response<T>>.value(_FakeResponse_9<T>(
          this,
          Invocation.method(
            #putUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i6.Response<T>>.value(_FakeResponse_9<T>(
          this,
          Invocation.method(
            #putUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i10.Future<_i6.Response<T>>);

  @override
  _i10.Future<_i6.Response<T>> head<T>(
    String? path, {
    dynamic data,
    Map<String, dynamic>? queryParameters,
    _i6.Options? options,
    _i6.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i10.Future<_i6.Response<T>>.value(_FakeResponse_9<T>(
          this,
          Invocation.method(
            #head,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i6.Response<T>>.value(_FakeResponse_9<T>(
          this,
          Invocation.method(
            #head,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i10.Future<_i6.Response<T>>);

  @override
  _i10.Future<_i6.Response<T>> headUri<T>(
    Uri? uri, {
    dynamic data,
    _i6.Options? options,
    _i6.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #headUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i10.Future<_i6.Response<T>>.value(_FakeResponse_9<T>(
          this,
          Invocation.method(
            #headUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i6.Response<T>>.value(_FakeResponse_9<T>(
          this,
          Invocation.method(
            #headUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i10.Future<_i6.Response<T>>);

  @override
  _i10.Future<_i6.Response<T>> delete<T>(
    String? path, {
    dynamic data,
    Map<String, dynamic>? queryParameters,
    _i6.Options? options,
    _i6.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i10.Future<_i6.Response<T>>.value(_FakeResponse_9<T>(
          this,
          Invocation.method(
            #delete,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i6.Response<T>>.value(_FakeResponse_9<T>(
          this,
          Invocation.method(
            #delete,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i10.Future<_i6.Response<T>>);

  @override
  _i10.Future<_i6.Response<T>> deleteUri<T>(
    Uri? uri, {
    dynamic data,
    _i6.Options? options,
    _i6.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i10.Future<_i6.Response<T>>.value(_FakeResponse_9<T>(
          this,
          Invocation.method(
            #deleteUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i6.Response<T>>.value(_FakeResponse_9<T>(
          this,
          Invocation.method(
            #deleteUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i10.Future<_i6.Response<T>>);

  @override
  _i10.Future<_i6.Response<T>> patch<T>(
    String? path, {
    dynamic data,
    Map<String, dynamic>? queryParameters,
    _i6.Options? options,
    _i6.CancelToken? cancelToken,
    _i6.ProgressCallback? onSendProgress,
    _i6.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i10.Future<_i6.Response<T>>.value(_FakeResponse_9<T>(
          this,
          Invocation.method(
            #patch,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i6.Response<T>>.value(_FakeResponse_9<T>(
          this,
          Invocation.method(
            #patch,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i10.Future<_i6.Response<T>>);

  @override
  _i10.Future<_i6.Response<T>> patchUri<T>(
    Uri? uri, {
    dynamic data,
    _i6.Options? options,
    _i6.CancelToken? cancelToken,
    _i6.ProgressCallback? onSendProgress,
    _i6.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patchUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i10.Future<_i6.Response<T>>.value(_FakeResponse_9<T>(
          this,
          Invocation.method(
            #patchUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i6.Response<T>>.value(_FakeResponse_9<T>(
          this,
          Invocation.method(
            #patchUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i10.Future<_i6.Response<T>>);

  @override
  void lock() => super.noSuchMethod(
        Invocation.method(
          #lock,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void unlock() => super.noSuchMethod(
        Invocation.method(
          #unlock,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void clear() => super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i10.Future<_i6.Response<dynamic>> download(
    String? urlPath,
    dynamic savePath, {
    _i6.ProgressCallback? onReceiveProgress,
    Map<String, dynamic>? queryParameters,
    _i6.CancelToken? cancelToken,
    bool? deleteOnError = true,
    String? lengthHeader = r'content-length',
    dynamic data,
    _i6.Options? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #download,
          [
            urlPath,
            savePath,
          ],
          {
            #onReceiveProgress: onReceiveProgress,
            #queryParameters: queryParameters,
            #cancelToken: cancelToken,
            #deleteOnError: deleteOnError,
            #lengthHeader: lengthHeader,
            #data: data,
            #options: options,
          },
        ),
        returnValue:
            _i10.Future<_i6.Response<dynamic>>.value(_FakeResponse_9<dynamic>(
          this,
          Invocation.method(
            #download,
            [
              urlPath,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i6.Response<dynamic>>.value(_FakeResponse_9<dynamic>(
          this,
          Invocation.method(
            #download,
            [
              urlPath,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
      ) as _i10.Future<_i6.Response<dynamic>>);

  @override
  _i10.Future<_i6.Response<dynamic>> downloadUri(
    Uri? uri,
    dynamic savePath, {
    _i6.ProgressCallback? onReceiveProgress,
    _i6.CancelToken? cancelToken,
    bool? deleteOnError = true,
    String? lengthHeader = r'content-length',
    dynamic data,
    _i6.Options? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #downloadUri,
          [
            uri,
            savePath,
          ],
          {
            #onReceiveProgress: onReceiveProgress,
            #cancelToken: cancelToken,
            #deleteOnError: deleteOnError,
            #lengthHeader: lengthHeader,
            #data: data,
            #options: options,
          },
        ),
        returnValue:
            _i10.Future<_i6.Response<dynamic>>.value(_FakeResponse_9<dynamic>(
          this,
          Invocation.method(
            #downloadUri,
            [
              uri,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i6.Response<dynamic>>.value(_FakeResponse_9<dynamic>(
          this,
          Invocation.method(
            #downloadUri,
            [
              uri,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
      ) as _i10.Future<_i6.Response<dynamic>>);

  @override
  _i10.Future<_i6.Response<T>> request<T>(
    String? path, {
    dynamic data,
    Map<String, dynamic>? queryParameters,
    _i6.CancelToken? cancelToken,
    _i6.Options? options,
    _i6.ProgressCallback? onSendProgress,
    _i6.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #request,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #cancelToken: cancelToken,
            #options: options,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i10.Future<_i6.Response<T>>.value(_FakeResponse_9<T>(
          this,
          Invocation.method(
            #request,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i6.Response<T>>.value(_FakeResponse_9<T>(
          this,
          Invocation.method(
            #request,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i10.Future<_i6.Response<T>>);

  @override
  _i10.Future<_i6.Response<T>> requestUri<T>(
    Uri? uri, {
    dynamic data,
    _i6.CancelToken? cancelToken,
    _i6.Options? options,
    _i6.ProgressCallback? onSendProgress,
    _i6.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestUri,
          [uri],
          {
            #data: data,
            #cancelToken: cancelToken,
            #options: options,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i10.Future<_i6.Response<T>>.value(_FakeResponse_9<T>(
          this,
          Invocation.method(
            #requestUri,
            [uri],
            {
              #data: data,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i6.Response<T>>.value(_FakeResponse_9<T>(
          this,
          Invocation.method(
            #requestUri,
            [uri],
            {
              #data: data,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i10.Future<_i6.Response<T>>);

  @override
  _i10.Future<_i6.Response<T>> fetch<T>(_i6.RequestOptions? requestOptions) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetch,
          [requestOptions],
        ),
        returnValue: _i10.Future<_i6.Response<T>>.value(_FakeResponse_9<T>(
          this,
          Invocation.method(
            #fetch,
            [requestOptions],
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i6.Response<T>>.value(_FakeResponse_9<T>(
          this,
          Invocation.method(
            #fetch,
            [requestOptions],
          ),
        )),
      ) as _i10.Future<_i6.Response<T>>);
}

/// A class which mocks [SharedPreferences].
///
/// See the documentation for Mockito's code generation for more information.
class MockSharedPreferences extends _i1.Mock implements _i2.SharedPreferences {
  @override
  Set<String> getKeys() => (super.noSuchMethod(
        Invocation.method(
          #getKeys,
          [],
        ),
        returnValue: <String>{},
        returnValueForMissingStub: <String>{},
      ) as Set<String>);

  @override
  Object? get(String? key) => (super.noSuchMethod(
        Invocation.method(
          #get,
          [key],
        ),
        returnValueForMissingStub: null,
      ) as Object?);

  @override
  bool? getBool(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getBool,
          [key],
        ),
        returnValueForMissingStub: null,
      ) as bool?);

  @override
  int? getInt(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getInt,
          [key],
        ),
        returnValueForMissingStub: null,
      ) as int?);

  @override
  double? getDouble(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getDouble,
          [key],
        ),
        returnValueForMissingStub: null,
      ) as double?);

  @override
  String? getString(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getString,
          [key],
        ),
        returnValueForMissingStub: null,
      ) as String?);

  @override
  bool containsKey(String? key) => (super.noSuchMethod(
        Invocation.method(
          #containsKey,
          [key],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  List<String>? getStringList(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getStringList,
          [key],
        ),
        returnValueForMissingStub: null,
      ) as List<String>?);

  @override
  _i10.Future<bool> setBool(
    String? key,
    bool? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setBool,
          [
            key,
            value,
          ],
        ),
        returnValue: _i10.Future<bool>.value(false),
        returnValueForMissingStub: _i10.Future<bool>.value(false),
      ) as _i10.Future<bool>);

  @override
  _i10.Future<bool> setInt(
    String? key,
    int? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setInt,
          [
            key,
            value,
          ],
        ),
        returnValue: _i10.Future<bool>.value(false),
        returnValueForMissingStub: _i10.Future<bool>.value(false),
      ) as _i10.Future<bool>);

  @override
  _i10.Future<bool> setDouble(
    String? key,
    double? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setDouble,
          [
            key,
            value,
          ],
        ),
        returnValue: _i10.Future<bool>.value(false),
        returnValueForMissingStub: _i10.Future<bool>.value(false),
      ) as _i10.Future<bool>);

  @override
  _i10.Future<bool> setString(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setString,
          [
            key,
            value,
          ],
        ),
        returnValue: _i10.Future<bool>.value(false),
        returnValueForMissingStub: _i10.Future<bool>.value(false),
      ) as _i10.Future<bool>);

  @override
  _i10.Future<bool> setStringList(
    String? key,
    List<String>? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setStringList,
          [
            key,
            value,
          ],
        ),
        returnValue: _i10.Future<bool>.value(false),
        returnValueForMissingStub: _i10.Future<bool>.value(false),
      ) as _i10.Future<bool>);

  @override
  _i10.Future<bool> remove(String? key) => (super.noSuchMethod(
        Invocation.method(
          #remove,
          [key],
        ),
        returnValue: _i10.Future<bool>.value(false),
        returnValueForMissingStub: _i10.Future<bool>.value(false),
      ) as _i10.Future<bool>);

  @override
  _i10.Future<bool> commit() => (super.noSuchMethod(
        Invocation.method(
          #commit,
          [],
        ),
        returnValue: _i10.Future<bool>.value(false),
        returnValueForMissingStub: _i10.Future<bool>.value(false),
      ) as _i10.Future<bool>);

  @override
  _i10.Future<bool> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i10.Future<bool>.value(false),
        returnValueForMissingStub: _i10.Future<bool>.value(false),
      ) as _i10.Future<bool>);

  @override
  _i10.Future<void> reload() => (super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
}

/// A class which mocks [UseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockUseCase<Type, Params> extends _i1.Mock
    implements _i4.UseCase<Type, Params> {
  @override
  _i10.Future<_i7.Either<_i4.Failure, Type>> execute(Params? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [params],
        ),
        returnValue: _i10.Future<_i7.Either<_i4.Failure, Type>>.value(
            _FakeEither_10<_i4.Failure, Type>(
          this,
          Invocation.method(
            #execute,
            [params],
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i7.Either<_i4.Failure, Type>>.value(
                _FakeEither_10<_i4.Failure, Type>(
          this,
          Invocation.method(
            #execute,
            [params],
          ),
        )),
      ) as _i10.Future<_i7.Either<_i4.Failure, Type>>);
}

/// A class which mocks [InstantUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockInstantUseCase<Type, Params> extends _i1.Mock
    implements _i4.InstantUseCase<Type, Params> {
  @override
  _i7.Either<_i4.Failure, Type> execute(Params? params) => (super.noSuchMethod(
        Invocation.method(
          #execute,
          [params],
        ),
        returnValue: _FakeEither_10<_i4.Failure, Type>(
          this,
          Invocation.method(
            #execute,
            [params],
          ),
        ),
        returnValueForMissingStub: _FakeEither_10<_i4.Failure, Type>(
          this,
          Invocation.method(
            #execute,
            [params],
          ),
        ),
      ) as _i7.Either<_i4.Failure, Type>);
}

/// A class which mocks [InternetConnection].
///
/// See the documentation for Mockito's code generation for more information.
class MockInternetConnection extends _i1.Mock
    implements _i3.InternetConnection {
  @override
  Duration get checkInterval => (super.noSuchMethod(
        Invocation.getter(#checkInterval),
        returnValue: _FakeDuration_11(
          this,
          Invocation.getter(#checkInterval),
        ),
        returnValueForMissingStub: _FakeDuration_11(
          this,
          Invocation.getter(#checkInterval),
        ),
      ) as Duration);

  @override
  _i10.Future<bool> get hasInternetAccess => (super.noSuchMethod(
        Invocation.getter(#hasInternetAccess),
        returnValue: _i10.Future<bool>.value(false),
        returnValueForMissingStub: _i10.Future<bool>.value(false),
      ) as _i10.Future<bool>);

  @override
  _i10.Future<_i3.InternetStatus> get internetStatus => (super.noSuchMethod(
        Invocation.getter(#internetStatus),
        returnValue:
            _i10.Future<_i3.InternetStatus>.value(_i3.InternetStatus.connected),
        returnValueForMissingStub:
            _i10.Future<_i3.InternetStatus>.value(_i3.InternetStatus.connected),
      ) as _i10.Future<_i3.InternetStatus>);

  @override
  _i10.Stream<_i3.InternetStatus> get onStatusChange => (super.noSuchMethod(
        Invocation.getter(#onStatusChange),
        returnValue: _i10.Stream<_i3.InternetStatus>.empty(),
        returnValueForMissingStub: _i10.Stream<_i3.InternetStatus>.empty(),
      ) as _i10.Stream<_i3.InternetStatus>);
}

/// A class which mocks [GetWeatherForecastByCoordUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWeatherForecastByCoordUseCase extends _i1.Mock
    implements _i12.GetWeatherForecastByCoordUseCase {
  @override
  _i8.WeatherRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeWeatherRepository_12(
          this,
          Invocation.getter(#repository),
        ),
        returnValueForMissingStub: _FakeWeatherRepository_12(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i8.WeatherRepository);

  @override
  _i10.Future<_i7.Either<_i4.Failure, List<_i8.WeatherEntity>>> execute(
          _i12.CoordinateParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [params],
        ),
        returnValue:
            _i10.Future<_i7.Either<_i4.Failure, List<_i8.WeatherEntity>>>.value(
                _FakeEither_10<_i4.Failure, List<_i8.WeatherEntity>>(
          this,
          Invocation.method(
            #execute,
            [params],
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i7.Either<_i4.Failure, List<_i8.WeatherEntity>>>.value(
                _FakeEither_10<_i4.Failure, List<_i8.WeatherEntity>>(
          this,
          Invocation.method(
            #execute,
            [params],
          ),
        )),
      ) as _i10.Future<_i7.Either<_i4.Failure, List<_i8.WeatherEntity>>>);
}

/// A class which mocks [GetWeatherByCoordUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWeatherByCoordUseCase extends _i1.Mock
    implements _i12.GetWeatherByCoordUseCase {
  @override
  _i8.WeatherRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeWeatherRepository_12(
          this,
          Invocation.getter(#repository),
        ),
        returnValueForMissingStub: _FakeWeatherRepository_12(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i8.WeatherRepository);

  @override
  _i10.Future<_i7.Either<_i4.Failure, _i8.WeatherEntity>> execute(
          _i12.CoordinateParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [params],
        ),
        returnValue:
            _i10.Future<_i7.Either<_i4.Failure, _i8.WeatherEntity>>.value(
                _FakeEither_10<_i4.Failure, _i8.WeatherEntity>(
          this,
          Invocation.method(
            #execute,
            [params],
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i7.Either<_i4.Failure, _i8.WeatherEntity>>.value(
                _FakeEither_10<_i4.Failure, _i8.WeatherEntity>(
          this,
          Invocation.method(
            #execute,
            [params],
          ),
        )),
      ) as _i10.Future<_i7.Either<_i4.Failure, _i8.WeatherEntity>>);
}

/// A class which mocks [GetLocationUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetLocationUseCase extends _i1.Mock
    implements _i12.GetLocationUseCase {
  @override
  _i10.Future<_i7.Either<_i4.Failure, List<_i8.MyLocationEntity>>> execute(
          _i4.NoParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [params],
        ),
        returnValue: _i10
            .Future<_i7.Either<_i4.Failure, List<_i8.MyLocationEntity>>>.value(
            _FakeEither_10<_i4.Failure, List<_i8.MyLocationEntity>>(
          this,
          Invocation.method(
            #execute,
            [params],
          ),
        )),
        returnValueForMissingStub: _i10
            .Future<_i7.Either<_i4.Failure, List<_i8.MyLocationEntity>>>.value(
            _FakeEither_10<_i4.Failure, List<_i8.MyLocationEntity>>(
          this,
          Invocation.method(
            #execute,
            [params],
          ),
        )),
      ) as _i10.Future<_i7.Either<_i4.Failure, List<_i8.MyLocationEntity>>>);
}

/// A class which mocks [RemoveLocationUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveLocationUseCase extends _i1.Mock
    implements _i12.RemoveLocationUseCase {
  @override
  _i10.Future<_i7.Either<_i4.Failure, bool>> execute(
          _i8.MyLocationEntity? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [params],
        ),
        returnValue: _i10.Future<_i7.Either<_i4.Failure, bool>>.value(
            _FakeEither_10<_i4.Failure, bool>(
          this,
          Invocation.method(
            #execute,
            [params],
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i7.Either<_i4.Failure, bool>>.value(
                _FakeEither_10<_i4.Failure, bool>(
          this,
          Invocation.method(
            #execute,
            [params],
          ),
        )),
      ) as _i10.Future<_i7.Either<_i4.Failure, bool>>);
}

/// A class which mocks [SaveLocationUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveLocationUseCase extends _i1.Mock
    implements _i12.SaveLocationUseCase {
  @override
  _i10.Future<_i7.Either<_i4.Failure, bool>> execute(
          _i8.MyLocationEntity? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [params],
        ),
        returnValue: _i10.Future<_i7.Either<_i4.Failure, bool>>.value(
            _FakeEither_10<_i4.Failure, bool>(
          this,
          Invocation.method(
            #execute,
            [params],
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i7.Either<_i4.Failure, bool>>.value(
                _FakeEither_10<_i4.Failure, bool>(
          this,
          Invocation.method(
            #execute,
            [params],
          ),
        )),
      ) as _i10.Future<_i7.Either<_i4.Failure, bool>>);
}
